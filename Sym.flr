// Symbolic object model (C++ synthesis)


obj[|tag,val|].

scalar::obj.

symbol::scalar.
number::scalar.
string::scalar.

// test

// ?- ?any[tag]. // query any tagged items: must be all types


// C++ primitive types

C_type::primitive.				// pure C primitive type
Cpp_type::C_type.				// C++ primitive type

c_string::Cpp_type.

// core data model

object[tag:c_string, val:c_string].	// any object have <tag:val>

class::object.					// class ako object

scalar::object.					// scalar ako object

symbol::scalar.					// primitive scalars
string::scalar.
integer::number.
hex::integer.					// machine integers
bin::integer.	
number::scalar.					// floating point number (engeneering apps)
fixpoint::integer.				// fixed point number ( accounting apps )
money::fixpoint.				// .4 fixpoint type for money 


vector::object.					// vector ako object
stack::vector.					// FIFO stack
queue::vector.					// LIFI queue
map::vector.					// key/value mapping array

pair::object.					// cons pair for classic lists

file::object.					// File I/O
dir::file.						// directory

// element inheritance rule
//?C[tag,val] :- ?A[tag,val]::?B[tag,val].	// tag:val must be total inherited

// unit tests

//?x[tag]. ?y[val]. ?z[tag,val].		// must be all types

